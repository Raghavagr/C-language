// LIST ->


//code
#include <iostream>
#include <list>

using namespace std;

void display(list <int> &lst) {
    list <int> :: iterator it;
    for(it=lst.begin(); it!= lst.end(); it++) {
        cout<<*it<<" ";
    }
}

int main() {
	list <int> list1;       //list of 0 length
	
	list1.push_back(3);
	list1.push_back(5);
	list1.push_back(7);
	list1.push_back(9);
	list1.push_back(12);
	display(list1);
	
	//list1.pop_back();
	//list1.pop_back();
	
	list1.pop_front();  // delete from begining
	
	list1.remove(9);    // delete from mid or it will delete all the occurence of 9.
	
	// sorting the list 
	list1.sort();
	display(list1);
	
	// ANOTHER LIST WITH ITERATOR 
	list <int> list2(3);    // empty list of size 3 
	list<int> :: iterator iter;
	
	iter = list2.begin()
	*iter = 45;
	iter++;
	*iter = 9;
	iter++;
	display(list2);
	
	list1.merge(list2);
	cout<<"\nlist1 after merging"<<endl;
	display(list1);
	
	// SORT AND MERGE BOTH LIST 
	/*
	list1.sort();
	list2.sort();
	list1.merge(list2);
	display(list1);
	*/
	
	// REVERSING THE LIST 
	list1.reverse()
	display(list1);
	
	//SWAPPING
	// suppose there are 2 list lst1 = [2,3] and lst2 = [4,5]
	list1.swap(list2);
	
	return 0;
}
