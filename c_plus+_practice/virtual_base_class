// When 2 derived or sub class inherit same base class and it is derived by another class then the compiler get's comfused when we access base class,
// So, to resolve this problem, the concept of virtual base class is introduced.
// here, is an example..


//URL: https://ide.geeksforgeeks.org/FaHh9zyH7x

//Virtual BASE CLASS 
/*
Inheritance:
student -->test [Done]
student-->sports [Done]
test --> result [Done]
sports --> result [Done]
*/

//code
#include <iostream>
using namespace std;

class student {
    protected:
        int roll_no;
    public:
        void set_no(int a) {
            roll_no = a;
        }
        void print_no() {
            cout<<"\nthe roll_no is: "<<roll_no;
        }
};

class test: virtual public student {
    protected:
        float maths, phy;
    public:
        void set_marks(float m1, float m2) {
            maths = m1;
            phy = m2;
        }
        void print_marks() {
            cout<<"\nmaths marks: "<<maths<<"\nphysics marks: "<<phy;
        }
};

class sports: virtual public student {  //public virtual is also correct.
    protected:
        float score;
    public:
        void set_score(int sc) {
            score = sc;
        }
        void print_score() {
            cout<<"\nthe PT score is: "<<score;
        }
};

class result: public test, public sports {
    private:
        float total;
    public:
        void display() {
            total = maths + phy + score;
            print_no();
            print_marks();
            print_score();
            cout<<"\nthe total score is "<<total<<endl;
        }
};


int main() {
    result res;
    res.set_no(168);
    res.set_marks(79.3,86.5);
    res.set_score(47);
    res.display();
    
	return 0;
}
